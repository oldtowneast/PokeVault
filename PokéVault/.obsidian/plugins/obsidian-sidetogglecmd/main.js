/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => MyPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var MyPlugin = class extends import_obsidian.Plugin {
  async onload() {
    console.log("SideToggleCommand Plugin loaded.");
    this.addCommand({
      id: "STC-show-left-sidebar",
      name: "Show left sidebar",
      callback: () => this.sidebarVisibility("left", true)
    });
    this.addCommand({
      id: "STC-hide-left-sidebar",
      name: "Hide left sidebar",
      callback: () => this.sidebarVisibility("left", false)
    });
    this.addCommand({
      id: "STC-show-right-sidebar",
      name: "Show right sidebar",
      callback: () => this.sidebarVisibility("right", true)
    });
    this.addCommand({
      id: "STC-hide-right-sidebar",
      name: "Hide right sidebar",
      callback: () => this.sidebarVisibility("right", false)
    });
    this.addCommand({
      id: "STC-show-both-sidebars",
      name: "Show both sidebars",
      callback: () => {
        this.sidebarVisibility("left", true);
        this.sidebarVisibility("right", true);
      }
    });
    this.addCommand({
      id: "STC-hide-both-sidebars",
      name: "Hide both sidebars",
      callback: () => {
        this.sidebarVisibility("left", false);
        this.sidebarVisibility("right", false);
      }
    });
    this.addCommand({
      id: "STC-toggle-both-sidebars",
      name: "Toggle both sidebars",
      callback: () => {
        if (this.app.workspace.leftSplit.collapsed && this.app.workspace.rightSplit.collapsed) {
          this.app.workspace.leftSplit.expand();
          this.app.workspace.rightSplit.expand();
        } else {
          this.app.workspace.leftSplit.collapse();
          this.app.workspace.rightSplit.collapse();
        }
      }
    });
  }
  async onunload() {
    console.log("SideToggleCommand Plugin unloaded.");
  }
  sidebarVisibility(side, visible) {
    const sidebar = side === "left" ? this.app.workspace.leftSplit : this.app.workspace.rightSplit;
    if (sidebar.collapsed && visible) {
      sidebar.expand();
    } else if (!sidebar.collapsed && !visible) {
      sidebar.collapse();
    }
  }
};
